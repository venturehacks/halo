/**
* TODO: global selectors shouldn't be necessary.
        figure out what the hell is wrong with cssmodules
**/

// Sizes (includes line height)

@each $name, $font-size-and-lh in $font-sizes-map {
  :global(.__halo_fontSizeMap_#{$name}) {
    font-size: map-get($font-size-and-lh, font-size);
    line-height: map-get($font-size-and-lh, line-height);
  }
}

// weights

@each $name, $weight in $weights {
  :global(.__halo_fontWeight_#{$name}) {
    font-weight: $weight;
  }
}

// Custom line heights

@each $name, $line-height in $line-heights {
  :global(.__halo_lineHeight_#{$name}.__halo_lineHeight_#{$name}) {
    line-height: $line-height;
  }
}

// custom colors

@each $name, $color in $colors {
  :global(.__halo_color_#{$name}.__halo_color_#{$name}) {
    color: $color;
  }
}

// Convenience configuration

.block {
  display: block;
}

.uppercase {
  text-transform: uppercase;
}

.italic {
  font-style: italic;
}

.regular {
  font-weight: $weight--regular;
}

.medium {
  font-weight: $weight--medium;
}

.semibold {
  font-weight: $weight--semibold;
}

.bold {
  font-weight: $weight--bold;
}

.monospace {
  @include font($family: monospace);
}

.error {
  color: $text-dark--error;
}

.warning {
  color: $text-dark--warning;
}

.success {
  color: $text-dark--success;
}

.antialiased {
  @include font-antialiased;
}

// color scheme + type contrast

:global(.__halo_textContrast_dark_AAAA) {
  color: $text-dark--aaaa;
}

:global(.__halo_textContrast_dark_AAA) {
  color: $text-dark--aaa;
}

:global(.__halo_textContrast_dark_AA) {
  color: $text-dark--aa;
}

:global(.__halo_textContrast_dark_A) {
  color: $text-dark--a;
}

:global(.__halo_textContrast_light_AAAA) {
  color: $text-light--aaaa;
}

:global(.__halo_textContrast_light_AAA) {
  color: $text-light--aaa;
}

:global(.__halo_textContrast_light_AA) {
  color: $text-light--aa;
}

:global(.__halo_textContrast_light_A) {
  color: $text-light--a;
}

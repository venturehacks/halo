@import './base';

$raw-checkbox-size: tempo(4);
$raw-radio-size: tempo(4);
$pill-border-radius: tempo(6);

/**
 * @deprecated (drew) 2022-02-25
 * @mixin deprecated as of 0.15.2
 * Please do not use in new code.
*/
@mixin input-radio($args...) {
  @include input-checkbox($args...);
}

/**
 * @deprecated (drew) 2022-02-25
 * @mixin deprecated as of 0.15.2
 * Please do not use in new code.
*/
@mixin input-checkbox {
  @include hide-default-browser-input;

  &[disabled] {
    pointer-events: none;
  }
}

/**
 * @deprecated (drew) 2022-02-25
 * @mixin deprecated as of 0.15.2
 * Please do not use in new code.
*/
@mixin hide-default-browser-input {
  opacity: 0;
  position: absolute;
  -webkit-appearance: none;
  z-index: -2;
}

%input-label-base {
  @include font($size: md);
  position: relative;
  display: inline-block;
  cursor: pointer;
  transition: all 200ms ease;

  &::before,
  &::after {
    transition: all 200ms ease;
    position: absolute;
    display: inline-block;
    content: '';
  }

  [disabled] + &,
  [disabled]:checked + & {
    cursor: default;
    pointer-events: none;
  }
}

@mixin input-label-checkbox {
  @extend %input-label-base;
  padding-left: tempo(6);
  line-height: $raw-checkbox-size;

  // empty checkbox
  &::before {
    left: 0;
    height: $raw-checkbox-size;
    width: $raw-checkbox-size;
    border: 1px solid $dark-aaaa;
    background-color: $white;
    border-radius: 3px;
  }

  // hover = punchy blue border
  // &:hover::before {
  //   @include input-border-hover;
  // }

  // checked
  :checked + &::before {
    border-color: $blue-500;
    background-color: $blue-500;
  }

  // checkmark
  &::after {
    left: 3px;
    top: 4px;
    height: 5px;
    width: 10px;
    border-left: 2px solid white;
    border-bottom: 2px solid white;
    transform: rotate(-45deg);
  }

  // checked
  :checked + &::after {
    content: ' ';
  }

  // unchecked
  :not(:checked) + &::after {
    content: none;
  }

  [disabled] + &,
  [disabled]:checked + & {
    color: $dark-a;

    &::before,
    &::after {
      @include input-disabled;
    }
  }

  // warning color
  .hasError.warning + & {
    color: $dark-warning;
    &::before {
      border-color: $dark-warning;
      background-color: $dark-warning;
    }
  }

  // critical color
  .hasError.critical + & {
    color: $dark-error;
    &::before {
      border-color: $dark-error;
      background-color: $dark-error;
    }
  }
}

@mixin input-label-radio {
  @extend %input-label-base;
  line-height: $raw-radio-size;
  padding-left: tempo(6);

  // circle outline
  &::before {
    left: 0;
    height: $raw-radio-size;
    width: $raw-radio-size;
    @include border-circle;
    border: 1px solid $dark-aaaa;
    background-color: $white;
  }

  // circle outline: selected radio
  :checked + &::before {
    border-color: $blue-500;
    background-color: $blue-500;
  }

  // inner dot: unselected radio
  &::after {
    left: 5px;
    top: 5px;
    background-color: white;
    width: 6px;
    height: 6px;
    @include border-circle;
  }

  // inner dot: selected radio
  :checked + &::after {
    content: ' ';
  }

  // inner dot: unselected radio (hide)
  :not(:checked) + &::after {
    content: none;
  }

  [disabled] + &,
  [disabled]:checked + & {
    color: $dark-a;

    &::before {
      border-color: $dark-aa;
      background-color: $slate-100;
    }

    &::after {
      background-color: $dark-aa;
    }
  }

  // warning color
  .hasError.warning + & {
    color: $dark-warning;
    &::before {
      background-color: $dark-warning;
      border-color: $dark-warning;
    }
  }

  // critical color
  .hasError.critical + & {
    color: $dark-error;
    &::before {
      background-color: $dark-error;
      border-color: $dark-error;
    }
  }
}

@mixin input-control-center {
  position: relative;

  &::before {
    top: 50%;
    transform: translateY(-50%);
  }

  // NOTE(drew): we can apply rotation on both radio+checkbox
  // because rotating a circle 45ยบ means nothing ;)
  &::after {
    top: 50%;
    transform: translateY(-50%) rotate(-45deg);
  }
}

@mixin input-label-pill {
  border: 1px solid $dark-aaaa;
  border-radius: $pill-border-radius;
  padding: 10px tempo(5) 10px 38px;

  // empty
  &::before {
    @include border-circle;
    left: tempo(3);
  }

  // selected
  [type='checkbox'] + &::after {
    left: 15px;
    top: 15px;
  }
  [type='radio'] + &::after {
    left: 17px;
    top: 15px;
  }

  &:hover {
    &::before {
      @include border-circle;
    }
  }

  :checked + & {
    border-color: $blue-500;
  }

  [disabled] + &,
  [disabled]:checked + & {
    border-color: rgba($dark-a, 0.5);

    &::before {
      border-color: $slate-100;
    }

    &::after {
      border-color: $dark-a;
    }
  }
}

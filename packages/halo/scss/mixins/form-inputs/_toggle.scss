@import './base';

$raw-toggle-switch-gutter-width: tempo(4.5) !default;
$raw-toggle-switch-gutter-height: 12px !default;
$raw-toggle-switch-knob-size: tempo(2.5) !default;

@mixin input-label-toggle-switch-left {
  @extend %input-label-base;
  padding-left: tempo(6);
  padding-right: tempo(1);
  line-height: $raw-toggle-switch-gutter-height - 1px;
  display: block;

  // switch gutter
  &::before {
    left: 0;
    top: 4px;
    border-radius: 7px;
    height: $raw-toggle-switch-gutter-height;
    width: $raw-toggle-switch-gutter-width;
    background-color: currentColor;
  }

  // toggle circle nub
  &::after {
    left: 0;
    top: 0;
    width: $raw-toggle-switch-knob-size;
    height: $raw-toggle-switch-knob-size;
    background-color: $white;
    @include border-circle;
    border: 2px solid currentColor;
  }

  // off (unchecked)
  :not(:checked) + & {
    &::before,
    &::after {
      color: $slate-500;
    }
  }

  // on (checked)
  :checked + & {
    &::before,
    &::after {
      color: $blue-500;
    }

    // move knob rightward to indicate 'on' state
    &::after {
      left: $raw-toggle-switch-knob-size - 4px;
    }
  }

  [disabled]:checked + & {
    &::before,
    &::after {
      color: $blue-500;
    }
  }

  .hasError.warning + & {
    &::before,
    &::after {
      color: $dark-warning;
    }
  }

  .hasError.critical + &,
  .hasError.critical:checked + & {
    &::before,
    &::after {
      color: $dark-error;
    }
  }
}

@mixin input-label-toggle-switch-right {
  @include input-label-toggle-switch-left;
  padding-right: tempo(6);
  padding-left: 0;
  text-align: right;

  // switch gutter
  &::before {
    right: 0;
    left: auto;
  }

  // toggle circle nub
  &::after {
    right: tempo(2);
    left: auto;
  }

  // on (checked)
  :checked + & {
    // move knob leftward to indicate 'on' state
    &::after {
      right: 0;
      left: auto;
    }
  }
}

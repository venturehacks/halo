@import './base';

$toggle-switch-gutter-width: tempo(7);
$toggle-switch-gutter-height: 10px;
$toggle-switch-knob-size: tempo(4);

@mixin input-label-toggle-switch-left {
  @extend %input-label-base;
  padding-left: tempo(10);
  padding-right: tempo(2);

  // line-height: $toggle-switch-gutter-height - 1px;
  display: block;

  // switch gutter
  &::before {
    left: 0;
    top: 7px;
    border-radius: 7px;
    height: $toggle-switch-gutter-height;
    width: $toggle-switch-gutter-width;
    background-color: currentColor;
  }

  // toggle circle nub
  &::after {
    left: 0;
    top: 4px;
    width: $toggle-switch-knob-size;
    height: $toggle-switch-knob-size;
    background-color: $white;
    @include border-circle;
    border: 1px solid currentColor;
  }

  // off (unchecked)
  :not(:checked) + & {
    &::before,
    &::after {
      color: $slate-500;
    }
  }

  // on (checked)
  :checked + & {
    &::before,
    &::after {
      color: $gtmblue-500;
    }

    // move knob rightward to indicate 'on' state
    &::after {
      left: $toggle-switch-knob-size - 4px;
    }
  }

  [disabled]:checked + & {
    color: $dark-a;

    &::before,
    &::after {
      color: $dark-a;
    }
  }

  .hasError.warning + & {
    &::before,
    &::after {
      color: $dark-warning;
    }
  }

  .hasError.critical + &,
  .hasError.critical:checked + & {
    &::before,
    &::after {
      color: $dark-error;
    }
  }
}

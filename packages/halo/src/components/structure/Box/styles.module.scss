@import 'halo';

$directions: (top bottom left right);
$box-alignments: (
  top center bottom left right normal space-between space-evenly space-around
    stretch
);
$text-alignments: (left center right);
$grid-cell-count: 24;

.component {
  display: block;
}

.relative {
  position: relative;
}

.wrap {
  flex-wrap: wrap;
}

.flexColumn {
  @include flex-column($align: left);
}

.flexRow {
  @include flex-row;
}

.width100 {
  width: 100%;
}

.clickable {
  cursor: pointer;
}

/**
 * TODO: global selectors shouldn't be necessary.
         figure out what the hell is wrong with cssmodules
**/

@each $name, $color in $colors {
  :global(._h_background_#{'' + $name}) {
    background-color: $color;
  }
}

@each $alignment in $box-alignments {
  // column
  :global(._h_col_align_#{'' + $alignment}) {
    align-items: map-get($box-flex, $alignment);
  }

  :global(._h_col_valign_#{'' + $alignment}) {
    justify-content: map-get($box-flex, $alignment);
  }

  // row
  :global(._h_row_align_#{'' + $alignment}) {
    justify-content: map-get($box-flex, $alignment);
  }

  :global(._h_row_valign_#{'' + $alignment}) {
    align-items: map-get($box-flex, $alignment);
  }
}

@for $i from 1 through 10 {
  @each $d in $directions {
    :global(._h_padding_#{'' + $d}_#{'' + $i}) {
      padding-#{'' + $d}: tempo($i);
    }

    :global(._h_margin_#{'' + $d}_#{'' + $i}) {
      margin-#{'' + $d}: tempo($i);
    }
  }
}

@each $t in $text-alignments {
  :global(._h_textAlign_#{'' + $t}) {
    text-align: $t;
  }
}
